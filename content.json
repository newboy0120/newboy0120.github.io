{"meta":{"title":"小徐的絮絮叨叨","subtitle":"","description":"111","author":"Xiao XU","url":"http://piaopiao.love","root":"/"},"pages":[{"title":"","date":"2022-11-07T01:56:15.137Z","updated":"2022-11-07T01:56:15.137Z","comments":true,"path":"about/index.html","permalink":"http://piaopiao.love/about/index.html","excerpt":"","text":"是一个小徐絮絮叨叨的东西，记录了小徐的学习历程，学到的知识啥的"},{"title":"所有分类","date":"2022-11-04T12:21:47.000Z","updated":"2022-11-04T12:22:50.564Z","comments":true,"path":"categories/index.html","permalink":"http://piaopiao.love/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2022-11-04T12:21:49.000Z","updated":"2022-11-04T12:21:49.386Z","comments":true,"path":"friends/index.html","permalink":"http://piaopiao.love/friends/index.html","excerpt":"","text":""},{"title":"","date":"2022-11-07T01:57:58.361Z","updated":"2022-11-07T01:57:58.361Z","comments":true,"path":"mylist/index.html","permalink":"http://piaopiao.love/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2022-11-07T01:56:56.219Z","updated":"2022-11-07T01:56:56.219Z","comments":true,"path":"tag/index.html","permalink":"http://piaopiao.love/tag/index.html","excerpt":"","text":""}],"posts":[{"title":"python杂记","slug":"python杂记","date":"2022-11-10T06:31:20.000Z","updated":"2022-11-10T07:26:54.757Z","comments":true,"path":"2022/11/10/python杂记/","link":"","permalink":"http://piaopiao.love/2022/11/10/python%E6%9D%82%E8%AE%B0/","excerpt":"","text":"写在前面思来想去还是把python在好好的看一下吧，不能浪费了当时买的电子书，看一看学一下，记录一下学习历程。吵吵嚷嚷着学python好久好久了，也不能说是没学，反正到现在为止，能看懂python的代码了，学的零零散散的，不成体系。这不最近现在没事干，从头学一下吧。计算机的语言怎么也要精通一样吧，学好一种，其他都打差不差，我的要求不高，能看懂，知道是什么逻辑，能看懂就完全ok。 安装python要学习一门语言，总要从把这个语言下载到电脑上，能使用开始。 这里有两种方法，一个是打开浏览器，打开百度，搜索python官网，找到download；另外一个是打开我https://www.python.org/downloads/这个链接，找到自己想要python版本。下载好之后，无脑下一步就好，鼠标直接嘎嘎往下点。安装好之后，起命令行，我的win是WIn+R然后cmd或者powershell，mac是terminal。这不进命令行了，我们python --version，就会看到自己所安装的版本 然后是配置环境变量，我记得在win里面要配置的，大概是打开此电脑右击-&gt;最下面的属性-&gt;然后有个添加环境变量-&gt;然后粘贴就好了。mac的话，是要去用户的家目录下，新建一个文本文档，叫.bash_profile的文件， 123456Setting PATH for Python 3.7The original version is saved in .bash_profile.pysavePATH=&quot;/Library/Frameworks/Python.framework/Versions/3.7/bin:$&#123;PATH&#125;&quot;export PATHalias python=&quot;/Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7&quot; 然后就配置完了，我也不用，这个所以就从百度上随便贴了一段 然后，想看能不能用，我们直接一手python3，进入python视图，直接print (&#39;hello world!&#39;)就完全ok的 安装程序猿必备的软件——sublimesublime的网址，选择你需要的，直接下载就好，这个也是无脑下一步安装就可以。当然这边建议安装的时候，都直接默认，不要瞎改，要不然以后不好找了。。。当然如果你想要更改路径啥的，也是没啥问题的。现在应该就可以用了，用这个软件了 sublime的调教学习python好了好了，工具准备的差不多了，我们可以开始学习，python啦。虽然吧，上面都是一些废话，都是我自己想着写的，是一些鄙人认为特别没有营养的东西，但是对于新手来说，可能刚好需要这种东西，所以嘛，我就写了一点点，也算是做个导入吧。在提一下，拖拖拉拉好久，也算是给自己一个小小的交代吧，从大概一年前，山东的科技节网络赛道大赛结束的时候，知道了路由交换这一门有着python自动化这一说，就嗷嗷这要学python了，后面又转了安全的方向，浅浅的用了不少这种那种语言的东西，也不算陌生，但也绝对算不上是熟悉。也不知道怎么形容，就大概意思吧。 关于快捷键各种杂七杂八的经验，告诉我，你要先熟悉快捷键，然后再学习，养成一个习惯，不然的话，可能此生都用不到了，一旦熟悉了某种东西，成为了习惯，再去改就不是那么一回事了。所以在这里写一下，各种的快捷键","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://piaopiao.love/tags/python/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-11-04T10:11:22.032Z","updated":"2022-11-04T10:11:22.032Z","comments":true,"path":"2022/11/04/hello-world/","link":"","permalink":"http://piaopiao.love/2022/11/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"最新的burpsuit_pro_2022.9","slug":"最新的burpsuit-pro-2022-9","date":"2022-11-03T06:37:32.000Z","updated":"2022-11-04T02:44:12.261Z","comments":true,"path":"2022/11/03/最新的burpsuit-pro-2022-9/","link":"","permalink":"http://piaopiao.love/2022/11/03/%E6%9C%80%E6%96%B0%E7%9A%84burpsuit-pro-2022-9/","excerpt":"","text":"写在前面起因是本人看到那帮安全的大佬，人手用的macc，所以鄙人就去淘宝装了黑苹果，准备用着mac来学安全。因为 安装java11最好的方法是去oracle 的官网去下载java，这样子是公开的，据说是没有后门的。具体有没有我也不知道啦。 进入之后，如果要下载java也就是jdk，我们需要注册一个账号。说是需要一个企业的认证。然后我们往下巴拉巴拉找到，自己需要的版本，我这里用的是java11。 下载之后下一步就是无脑的下一步了，我这是在mac做的，所以直接就默认默认路径了。 接下来就是在命令行下操作了 1234567891011121314151617181920java -version#查看java是否已安装/usr/libexec/java_home -V#查找java的安装路径ls -a#在当前用户的家目录下查看所有的文件vim .bash_profile#创建并打开一个环境变量的隐藏文件export JAVA_11_HOME=/Library/Java/JavaVirtualMachines/jdk-11.0.16.1.jdk/Contents/Home #java11自己所在位置export JAVA_18_HOME=/Library/Java/JavaVirtualMachines/jdk-18.0.2.1.jdk/Contents/Home#java18自己所有在的位置alias java11=&quot;export JAVA_HOME=$JAVA_11_HOME&quot; #编辑一个命令java11，输入则转至jdk11alias jva18=&quot;export JAVA_HOME=$JAVA_18_HOME&quot; #编辑一个命令java18，输入则转至jdk18#直接复制进去修改一下保存退出source .bash_profile#使这个环境变量运行echo $JAVA_HOME#打印java环境变量的位置 验证 1234java11java -versionjava18java -version 查看是否可以正常的切换版本 burpsuite pro安装我们直接去burpsuite的官网下载，选择自己需要的版本，直接下载安装 破解这里直接使用大佬的破解的md5还又sha256 我们科学上网，直接下载大佬写好的破解软件 下载其中的Loader和Keygen 我们打开安装的burpsuite_pro的安装文件夹里面去，找到Burp SuiteeProfessional.app&#x2F;Contents&#x2F;Resources&#x2F;app这个对应的目录下，然后去把这两个文件放入这个文件夹当中在当前文件夹打开终端 1234java -jar burp-keygen-scz.jar#运行破解程序，run一下java -noverify -javaagent:BurpSuiteLoader.jar -jar burpsuite_pro.jar#运行burpsuite的java程序 点击破解程序中的run，然后将破解的密码放入这个burpsuite中，点击按钮，把证书的导入做个来回激活成功 在浏览器中安装burpsuite的证书在burpsuite的Proxy的选项中，找到optiions，添加一个监听本地的环回端口的地址 点击那个add，添加 然后我们找到浏览器，chrome或者firefox两个浏览器，我们添加插件，火狐有一个FoxyProxy的插件，我们添加到插件，打开找到这个选项 添加端口，跟BP中的配置要一致，我们这里选择的是8080端口，保存即可 然后我们用浏览器访问http://burp，下载CA证书并导入 写一个shell程序我们找到这个程序的路径，是/Applications/Burp Suite Professional.app/Contents/Resources/app，然后打开的命令在上面，我们用sublime text写一个 12cd &#x27;/Applications/Burp Suite Professional.app/Contents/Resources/app&#x27;java -noverify -javaagent:BurpSuiteLoader.jar -jar \\burpsuite_pro.jar 保存为xx.sh，开启命令行，将这个文件的权限改为777chmod 777 bp.sh用ls -al查看是否是已经修改成功 因为我用的mac，我改的是bp.command这个样式，直接双击，就可以打开bp了","categories":[],"tags":[{"name":"tools","slug":"tools","permalink":"http://piaopiao.love/tags/tools/"}]},{"title":"信息搜集--ctfshow","slug":"信息搜集--ctfshow","date":"2022-04-12T11:56:48.000Z","updated":"2022-11-11T02:51:02.095Z","comments":true,"path":"2022/04/12/信息搜集--ctfshow/","link":"","permalink":"http://piaopiao.love/2022/04/12/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86--ctfshow/","excerpt":"","text":"信息搜集–ctfshowweb1查看源码 web2—–前台js绕过 打开开发者工具即可打开 ctrl+shfit+i 换成view-source协议也是可以的 通过开发者工具查看网络，中的response，查看源码 web3—–抓包查看开发整工具，network抓包查看http协议头，有个flag头 web4—–rebots.txt访问rebots.txt这个地址查看，有个不允许访问的，我们进去看看 Note：这个是防止爬虫的一个柜子，拒绝不同的UA访问 web5—-phps下载源码https的时候,我们使用phps,是可以将当前界面下载下来的 web6—–www.zip源码包源码包下载，我们下载之后，访问该路径，获取flag 也就是说我们下载的是一个源码包，但是真正做网站的时候，会做出一些，修改。所以我们要去访问这个文件的路径 web7—–.XX的隐藏文件访问&#x2F;.git即可拿到flag，这个.git是git这个软件在本地初始化的一个隐藏文件，代码修改后第一次提交是提交到.git文件夹内，再push才是提交到远程管理仓库等，如果配置不当，直接将 .git文件加载到线上环境，这样便引起了.git文件泄露。 下linux下 .是隐藏文件夹，造成源码的泄露，版本控制 .git %#(\\d)(\\d);(\\d) \\1\\2\\3 web8—–版本控制.svn web9—–.swp的交换文件访问交换文件，index.php.swp,可以直接下载，执行查看 vim非正常退出，会产生交换文件，是隐藏文件，后缀是.swp，在http中是非解析内容，变为二进制文件，可以直接下载 web10—–cookie中隐藏flagcookie中可以藏隐私数据 web11—–域名隐藏信息dbcha.com可以查看域名信息 web12—–弱口令可以尝试访问原地址，/admin这个目录，然后使用admin这个用户名，使用页面上的信息进行弱口令的解析 电话及密码 web13—–your-domain 表示该网站的域名，更改后进行访问 在网站中，包含了密码啥的，所以用我们 web14—–editor泄露editor是编辑器，可以通过编辑器中图片的路径，找到编辑器的路径，从编辑器漏洞开始，找到一个相应的目录，然后直接进行访问。看默认配置是否存在，不存在的话，存在一个目录遍历漏洞，有上传文件的地方，我们去查看一下 Note：每个编辑器配备一个数据库 web15—–社会工程学社会工程学，查看这个QQ号的地址 web16—–phpinfo泄露默认探针名字，tz.php，里面有phpinfo的源码泄露 Note：php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡流量、系统负载、服务器时间等信息。是一个查看服务器信息的工具。比如查看服务器支持什么，不支持什么，空间速度等等状况！ web17—–备份的sql文件直接在网址后面加上backup.sql，就会下载文件，我们sublime打开，就会找到flag web18—–JS查看源码，里面有个东西，是个uniode的密码，我们对其进行解密。说的是去110.php看一看。访问，获取flag’ web19—–JS的AES加密查看源码，看看代码，然后有个加密的值，我们直接绕过，传过去所需要的参数 web20—–asp程序的数据库asp数据作为文件存储，我们使用访问文件夹，dm&#x2F;data.mdb或&#x2F;dm&#x2F;db.mdb进行下载，在数据库中找到我们需要的flag，可以直接搜索flag，进行尝试 Note：防止数据库下的方法有在名字里面加#号的，我们可以直接使用%23进行绕过","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://piaopiao.love/tags/CTF/"}]},{"title":"命令执行--ctfshow","slug":"命令执行--ctfshow","date":"2022-04-12T11:56:48.000Z","updated":"2022-11-03T10:41:37.868Z","comments":true,"path":"2022/04/12/命令执行--ctfshow/","link":"","permalink":"http://piaopiao.love/2022/04/12/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C--ctfshow/","excerpt":"","text":"web29—-使用shell命令system直接获取php语句的最后一句可以没有分号 web30—–反义号进行命令执行可以将源文件进行复制为一个新的文件，然后直接访问该文件 过滤了system()，我们使用&#96;来进行绕过 web31—-逃逸正则匹配这里的东西就多了起来，我们使用逃逸 1?c=eval($_GET[1]);&amp;1=system(tac f*); 也就是说，我们这里使用eval()这个函数，意思是将里面的内容当做php代码执行，然后我们传入这个GET的值，我们用1来代替，接下来，我们拼接一下，让1&#x3D;XXXX，就可以直接绕过这个c所匹配的东西了 web32我们不仅仅可以使用;进行语句的分段，也可以使用?&gt;使这个php文件结束，然后再次使用进行文件的写入 include函数进行包含 %a:换行符 Note：我们使用包含的时候可以优先包含一下&#x2F;etc&#x2F;passwd看看这个是否存在，存在即存在文件包含，然后我们使用base64编码进行查看，出来之后翻译下。查看源码 web33—–require函数我们使用require函数进行包含，是引用或者包含外部php文件 Note：自身php文件执行的时候，我们有require这个函数的时候，会自动引用这个包含的php文件，也就是说，这个源文件中多了引用中的php文件，也可以说，将两个文件拼接了。外部文件出了问题，该源文件也会报错。主要引用的php文件不能有错误，有的话会中指程序运行 1?c=require%a$_GET[1]?&gt;&amp;1= Note:include和require的区别，语法相同，不过是include错误：生成警告，继续执行。require错误：生成致命错误，终止脚本 web34—–1234567不是用括号的函数echoprintissetunsetincluderequire 我们使用这几个函数进行绕过，这是不是用()的函数 web35—–如上 web36—–过滤数字，用字母代替 web37—–伪协议使用data协议，是把后面的东西当做php代码执行 1data://text/plain,&lt;?php phpinfo();?&gt; web38—–短标签","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://piaopiao.love/tags/CTF/"}]},{"title":"园区网知识","slug":"园区网知识","date":"2022-04-12T11:56:48.000Z","updated":"2022-11-11T02:54:26.761Z","comments":true,"path":"2022/04/12/园区网知识/","link":"","permalink":"http://piaopiao.love/2022/04/12/%E5%9B%AD%E5%8C%BA%E7%BD%91%E7%9F%A5%E8%AF%86/","excerpt":"","text":"IP网络基础IP子网划分与地址分配IPV4子网规划目的：减少地址浪费 操作：将一个网络号通过变长子网掩码划分为多个子网，每个子网分配给一个独立的广播域 结果：广播规模减少、网络规划合理、IP地址得到了合理利用 子网划分A类：0.0.0.0~127.255.255.255 &#x2F;&#x2F;8个网络位，24主机位 B类:127.16.0.0~191.255.255.255 &#x2F;&#x2F;16个网络位，16个主机位 C类：192.0.0.0~223.255.255.255 &#x2F;&#x2F;24网络位，8主机位 D类：224.0.0.0~239.255.255.255 &#x2F;&#x2F;组播地址 E类：240.0.0.0~255.255.255.255 &#x2F;&#x2F;保留地址 Note：D类、E类一般不分配。每个网段中的网络地址和广播地址不能分配给主机 背景：为了节省IP地址，企业网中普遍使用私网地址，不企业的私网地址可以重合。 私有地址： 10.0.0.0~10.255.255.255 172.16.0.0~172.31.255.255 192.168.0.0~192.168.255.255 **Note：默认情况下私网地址不能与公网通信，通信时私网转换为公网 ** 特殊地址： 127.0.0.0~127.255.255.255 &#x2F;&#x2F;本机的环回地址 0.0.0.0 &#x2F;&#x2F;表示任何网络 255.255.255.255 &#x2F;&#x2F;广播地址表示0.0.0.0的 假设有一个C类网段地址：192.168.10.0；默认情况下，网络掩码为24位，包括24位网络位，8位主机位。 编码具体步骤： 确认基准值：8 16 24 32 基准值&gt;子网掩码 n&#x3D;基准值-子网掩码 2^n&#x3D;跨度&#x3D;主机数 2^x&#x3D;子网个数（x&#x3D;主机位向网络位借的个数） 接口下IP地址、子网掩码规划和分配12interface GigabitEthernet 0/0/1 //进入接口 ip address x.x.x.x xx //配置ip地址，xx为掩码个数 子网规划：一般情况来讲，左到右，上到下，使用从小到大的数字标识 子网掩码：为了保证安全的特性，一般将掩码给予相应的规划，精确到所划分的位置 DHCP基本配置接口下使能DHCP功能，选择DHCP获取方式（接口下，全局地址池下）背景 为了节省时间，以及优化配置、集中管理，常采用地址池的方法给PC机分配地址工作原理 主机寻找DHCP服务器（广播报文），服务器分配未用的IP地址，多个DHCP服务器时，都会进行响应，主机以第一个为准，主机对所获取的ip地址信息向DHCP服务器做确认（广播），DHCP服务器对主机的确认做一个回复租期更新在租约期限达到50%，客户端开始请求更新IP地址的租期在申请到IP地址后，客户端存储三个定时器：租期更新、租期重绑定和租期失效（是服务器分配的），如果DHCP没指定时间，默认缺省，时间是1天。重绑定在达到87.5%的时候，没收到服务器相应，会申请重新绑定IPDHCP客户端发送DHCP请求报文续租时，如果DHCP客户端没有收到DHCP服务器的DHCP应答报文。默认情况下，重绑定定时器在租期剩余12.5%的时候超时，超时后，DHCP客户端会认为原DHCP服务器不可用，开始重新发送DHCP请求报文。网络上任何一台DHCP服务器都可以应答DHCP确认或DHCP非确认报文。如果收到DHCP确认报文，DHCP客户端重新进入绑定状态，复位租期更新定时器和重绑定定时器。如果收到DHCP非确认报文，DHCP客户端进入初始化状态。此时，DHCP客户端必须立刻停止使用现有IP地址，重新申请IP地址。释放如果到期了，还没有收到服务器的响应，客户端停止使用如果没到期，可以通过release报文，主动释放IP地址分配Ip地址顺序MAC静态绑定的IP–&gt;已使用过的IP–&gt;空闲状态的IP–&gt;超过租期的IP–&gt;产生冲突的IP 接口下 &#96;&#96;&#96;system-view &#x2F;&#x2F;进入系统视图dhcp enable &#x2F;&#x2F;开启DHCP地址池interface interface-type interface-number [.subinterface-number] &#x2F;&#x2F;进入接口试图下ip address x.x.x.x 24 &#x2F;&#x2F;配置接口下的地址dhcp select interface &#x2F;&#x2F;开启dhcp服务 123456789101112 - Note：缺省情况下，接口未开启采用接口地址池的DHCP服务器功能。如果是多个接口，那么在所有的接口都要重复配置- 全局下 - ``` system-view //进入系统视图 interface g 0/0/1 //进入接口视图或子视图 ip address x.x.x.x 24 //接口下配置相应的IP地址 ip address x.x.x.x 24 sub //接口下配置从地址池 dhcp select global //在接口采用全局地址的DHCP服务 Note：主从地址池，仅适用于DHCP客户端和DHCP服务器在同一网段 无中继：优先选择与此接口的主IP地址在，主分完了，去从分配。接口无IP地址，或不再相同网段，无法分配 有中继：收到报文中，自己有对应的分配，无对应的不分配都没有，你分配个锤子 全局下正确配置DHCP地址池，DNS，网关。客户端能在全局下获取到IP地址 全局下 12345678910system-view //进入系统试图ip poll XXX //IP地址池名字XXX network x.x.x.x 24 //宣告地址池中的网段 gateway-list x.x.x.x //配置网关地址 import all //自动获取DNS配置信息分配给客户端 dns-list x.x.x.x //配置静态的DNS给DHCP客户端 domain-name XXX //配置DHCP客户端分配后的域名后缀 exculuded-ip-address x.x.x.x b.b.b.b //排除地址x.x.x.x到b.b.b.b lease &#123;day hour minute&#125; //设置地址池的租期 static-bind ip-address x.x.x.x mac-address mac ///静态绑定IP地址 ​ Note：动态dns—-import all在缺省情况下是不打开的，是将自动获取的DNS分配给DHCP服务器 ​ 静态DNS—-dns-list x.x.x.x 配置的IP地址，最多配置8个，缺省情况下不分配IP地址 ​ —-domain-name XXX配置分配后的域名后缀，缺省情况未配置 线缆制作568B线序完成水晶头制作线序：橙白、橙、绿白、蓝、蓝白、绿、棕白、棕 Note：制作的时候，主意水晶头哪里，一定要将其怼到头（你想你都接触不上肯定不通是吧），制作时有金属触片的朝向自己个人习惯，其实另外一面也ok，不好拿不是，在按压时，注意将金属片跟压线钳对齐 emmm，最近刚发现了制作网线的小tips，我给加上吧。在做六类线的时候，我们先给你剥皮不是，然后里面有个不知道做什么用的十字架？然后剪的时候，不是特别好剪，我们剥皮之后，先把网线皮往下撸撸，用点劲，然后减掉十字架，然后再弄回去，使劲往回怼怼，就会发现十字架在剥皮里面了，然后标准的网线，就怎么说，那个破皮，是要被水晶头压住的，然后最好还是要卡到最里面 交换技术基本工作原理及基本配置通过console连接这个很简单的好吧，几乎就是无脑操作了，我们这个时候，拿出我们的console线，然后找到机器上的接口，你找不到，那肯定连上不上对吧，然后usb搞到我们自己的电脑上我们找到此电脑，然后右击有个管理，然后点击设备管理器，有个通用串行总线设备，看看自己的接口是什么，也就是COM加上一个数，这个都找不明白，咱就是说九年义务教育可能上的不错，我们在吧我们的CRT掏出来吧，双击吗打开，不用我说了吧，有个选项框，找到serial这个协议，找到自己的COM的接口号，有个波特率改成9600别问我问什么，我也不知道，其他的好像是连接不上的，具体为什么，问问运营商以及做协议的那些人吧，然后就连接上了，我们输入密码啥的巴拉巴拉的就进去了，可以配置了。 telent&#x2F;ssh方式实现用户远程登陆AAA认证123aaa //进入AAA认证的视图 local-user user-name password &#123;cipher|irreversible-cipher&#125; password //创建本地用户，设置密码 local-user user-name service-type telnet //设置本地用户介入类型为Telnet用户 Telent目的：实现用户的远程登陆 协议：客户端和服务器均采用TCP连接来传输命令 接口号：默认23 认证模式：AAA认证 Password（通过密码实现认证） Note：AAA认证时，输入账户名和密码，Password仅输入密码 123456789interface e 2/0/0 //进入端口 ip address x.x.x.x 24 //配置相应的IP地址user-interface vty 0 4 //配置vty的数量，默认情况存在5个，0 1 2 3 4五个用户 authentication-mode password //采用认证模式password set authentication password cipher //更改认证模式password的加密方式采用cipher protocol inbound &#123; all | telnet &#125; //配置VTY用户界面支持的telnet协议 authentication-mode aaa //设置用户认证方式为aaa authentication-domain domain-name //设置使用的认证域的名字telnet server-source -i Vlanif60 //开启具体的d Note：如果需要增加Telent的用户数量user-interface maximum-vty加上最大的用户数量， 完成配置之后，想要远程登陆Telent x.x.x.x，然后输入用户名密码啥的用户级别：0—-&gt;参观级，只能用ping、tracert网络诊断命令、从本设备发出访问外部设备的命令等 ​ 1—-&gt;监控级，display的命令，用户系统维护，但是不包括dis cu和dis save ​ 2—-&gt;配置级，业务配置命令，包括路由、各个网络层次的命令，向用户提供直接网络服务 ​ 3~15—-&gt;管理级，用于系统基本运行的命令，对业务提供支撑作用，如文件系统、FTP、TFTP下载、用户管理命令、命令级别的设置命令以及业务故障排除的debugging命令等 SSH12interface e 2/0/0 //进入端口 ip address x.x.x.x 24 //配置相应的IP地址 Note:配置地址测试连通性，然后做aaa的认证，aa中做密码，用户等级还有该用户的连接协议为ssh，然后在全局试图下做rsa，ssh用户的认证方式， 路由器12345678910111213aaa local-user yunrui password irreversible-cipher yunrui@123 //配置用户的认证方式 local-user yunrui privilege level 15 //配置用户等级 local-user yunrui service-type ssh //该用户允许ssh协议 quit rsa local-key-pair create //创建rsa密钥ssh user yunrui authentication-type password //ssh用户认证方式stelnet server enable //开启ssh服务ssh server-source -a 192.168.80.1 //允许ssh登陆的源接口地址user-interface vty 0 4 //进入用户视图 authentication-mode aaa //认证方式改为aaa user privilege level 15 //用户等级调制15 protocol inbound ssh //ssh服务绑定到出接口上 交换机123456789101112131415aaa local-user yunrui password irreversible-cipher admin@123 local-user yunrui privilege level 15 local-user yunrui service-type ssh quitrsa local-key-pair create stelnet server enablessh user yunruissh user yunrui authentication-type passwordssh user yunrui service-type stelnet //开启stelnet协议，ssh又叫做stelnetssh server-source -i Vlanif2user-interface vty 0 4 authentication-mode aaa user privilege level 15 protocol inbound ssh TFTP&#x2F;FTP软件连接到交换机，VRP系统升级更新配置等 stp、RSTP配置（优先级、开销）目的：解决冗余链路带来的环路问题（环路会带来广播风波、重复的数据帧、MAC地址漂移）越小越优 12345stp mode stp|rstp //更改stp的模式interface g 0/0/1 stp cost XXX //更改接口下的stp开销值stp priority 0-61440 //更改stp设备的优先级stp root|secondary primary //指定stp的根桥、备份根桥 MSTP配置123456789101112131415161718stp mode mstpstp region-configuration //进入stp域的试图 region-name XXX //域名为XXX revision-level 0-65535 //修改域的等级 stp instance 1 vlan X X //stp实例中所包含的vlan active region-configuration //将配置的stp域的内容进行提交stp instance 1 root|secondary primary //对在stp域中的实例进行主备根桥的手工指定stp instance 1 cost XXX //配置stp的实例的开销stp edged-port default|disable //在全局中开启|关闭，stp所有端口为边缘端口stp bpdu-filter default|disable //开启|关闭，stp中的bpdu保护，与边缘端口一同使用stp bpdu-filter default //配置所有端口为BPDU filter端口interface g 0/0/1 stp edged-port enable|disable //开启|关闭stp的边缘端口 stp root-protection //开启stp中的跟保护 bpdu disable //bpdu禁用 stp disable //禁用stp功能，及不参与stp树的计算 stp loop-protection //环路保护 stp bpdu-filtering enable //配置当前端口为BPDU filter端口 VLAN的基本原理和配置能够正确修改VLAN链路类型（Hybrid、Access、Trunk）； 123456interface g 0/0/1 port link-type access|trunk|hybrid //修改vlan的链路类型 port default vlan X //将vlanx放入到access链路类型中 port trunk allow-pass vlan XX //在trunk中允许vlanx通过 port mux-vlan enable //开启mux-vlan port-isolate enable group XX //设置对应的vlan组 能够正确熟练VLAN的划分方法； 123456789vlan batch 2 3 4 //批量创建vlan2、3、4vlan batch 2 to 10 //批量创建vlan2到vlan10vlan 10 //创建vlan10 mux-vlan //开启mux vlan，此vlan是主vlan subordinate separate XX //设置xx为隔离型vlan subordinate group xx //设置xx是互通性vlaninterface g 0/0/1 port mux-vlan enable //开启mux-vlan port-isolate enable group xx //放入xx隔离组中 VRRP 虚拟路由冗余技术目的：为了实现备份，增加网络的稳定性。 协议号：112 组播地址：224.0.0.18 选举：每三秒一次 我的理解：就是把多个设备虚拟成一个设备来使用，一块坏了，另一块还能用，有点像是影子的状态，选角的时候有个人瞅着，俗话说不怕贼瞅着，就怕贼惦记，所以就说这个地方主备切换，增加了网络的稳定性 12345678910111213interface vlanif 1 vrrp vrid x virtual-ip x.x.x.x //网关采用的地址 vrrp vrid x priority x //修改vrrp的优先级 vrrp vrid x preempt-mode timer delay xx //修改vrrp的抢占时间 vrrp vrid x authentication-mode md5|simple xxx //配置vrrp的认证方式 vrrp vrid x fast-resume //vrrp快速升主 vrrp vird x track bfd-session session-name x reduced|increased xx //与bfd联动，检测上行链路 vrrp vird x track bfd-session x reduced xx //这里进行单臂回声的时候，我们直接绑定在bfd中做的本地标识，而不是绑定具体的名字bfd 1 bind peer-ip x.x.x.x interface vlanif 1 source-ip y.y.y.y auto //创建bfd回话，绑定源IPy.y.y.y，目的ip为x.x.x.x，记得做两段bfd 1 bind peer-ip x.x.x.x interface vlanif 1 source-ip y.y.y.y one-arm-echo//单臂回声 discriminator local 2 //配置本地标识为2 min-echo-rx-interval //配置最小bpdu报文间隔，缺省1000毫秒 commint //提交 Note：做主备的时候，两个的虚拟IP是一样的不一样怎么备份，vrrp的默认优先级100，认证的时候双方认证，负载分担的话就是配多组的VRRP来实现， bfd检测，一般情况下两边配置，单臂路由的时候，在一边配置，做bfd之前要先开启bfd，然后再做bfd，然后做绑定 链路聚合目的：一根网线的传输速率是一定的，所以我们在逻辑上将多条现实存在链路虚拟为一条链路，用来提高带宽 聚合方式：手动和自动 12345678interface Eth 0/0/1 mode manual|lacp-static //修改链路的聚合方式手动|自动 eth-trunk 12 //将此端口放到聚合端口12 load-balance dst-ip|dst-mac|src-ip|src-mac|src-dst-ip|src-dst-mac//更改负载分担的方式，目的iP|目的mac|源ip|目的mac|源目IP|源目MACinterface eth-trunk 12 trunkport e 0/0/1 //将e 0/0/1端口添加到组中 least active-linknumber XX //最小的活动数量，缺省为1 max active-linknumber //最大的活动数量，缺省为8 Note：最多加入的端口为8个，修改聚合方式要先把下面的聚合端口删掉，只能是一对一，而且两边的都要做才可以通信，所有加入接口的必须一致 Lacp-static&#x2F;mode manual实现链路聚合链路模式的更改; 能够正确理解Lacp-static 模式M:N的原理; 能够正确配置相应的接口加入到链路聚合组中。 路由技术静态路由的配置1ip route-static 0.0.0.0 0 12.0.0.1 //引入0.0.0.0的缺省路由，掩码0，目的地址12.0.0.1 OSPF的基本配置正确配置ospf的router id12345interface loopback 0/0/1 //常常把逻辑接口作为标识这台设备的标准 ip add x.x.x.x xospf 1 router-id x.x.x.x //全局视图下配置ospf的router-idospf 1 router-id x.x.x.x //ospf视图下修改router-id Note：如果修改了ospf的router-id的话，那么需要重启ospf进程才可以生效reset ospf process，全局视图下 通过network将接口宣告进ospf的相应的区域123ospf 1 area 0 //区域类型 network x.x.x.x 0.0.0.x //可以是网段，也可以是具体的地址，后面加上反子网掩码 Note：area 0为骨干区域，0-255都是非骨干区域，所有非骨干区域必须与骨干区域相连 路由引入作用：将其他路由协议的路由表，引入到自己的路由表，并重新发布 123ospf 1 import-route direct|ospf|bgp|isis|static &#123;cost&#125; //引入路由的类型+cost值的修改 default cost inherit-metric //引入其他协议并继承原来的cost值 开销值修改概念作用：在ospf计算spf的时候，修改其路由所经过的路径 12interface g 0/0/1 ospf cost &#123;cost&#125; //修改该接口下的ospf的开销值 Note：每个接口都可以修改cost，计算路径时，采用的是出接口的cost值，通过计算cost的值生成spf的树。手工指定的优先级高于自动计算 接口cost&#x3D;参考带宽&#x2F;实际带宽 小于1，则取1 开销默认1，以太网默认1、P2P默认48、NBMA、P2MP默认1526 OSPf链路类型网络类型 P2P(点对点) 默认Cost值为48 链路层是PPP、HDLC时，在缺省的条件下，ospf认为其实P2P网络 以组播形式（224.0.0.5）发送协议报文 自动建立链接 Note：协议报文（Hello报文、DD报文、LSR报文、LSU报文、LSAck报文），hello 10s，Dead 40s，不选举DR和BDR P2MP(点到多点) 默认Cost为1526 没有默认的P2MP，只能手动修改，确实从其他网络类型强制修改的 常用手段：将非全连同的NBMA改为P2MP 组播（224.0.0.5）发送Hello报文，单播发送（DD、LSR、LSU、、LSAck） 只有手动进行部署，组播更新建立邻居 hello30s，Dead 120s，不选DR和BDR NBMA（非广播多路访问） 默认Cost为1562 协议是ATM或FR时，缺省情况下为NBMA 单播形式发送协议报文 单播指邻居 不允许组播和广播 选举DR和BDR 广播类型（Broadcast） 链路层为Ethernet、FDDI时，缺省情况下，是Broadcast 组播发送Hello、LSU、LSAck 224.0.0.5是OSPF路由器下面的，224.0.0.6是OSPF DR的预留 单播DD、LSR Hello 10s、Dead 40s 选举DR、BDR OSPF 认证、多区域、特殊区域、外部路由类型、路由聚合认证12345interface g 0/0/1 ospf authentication-mode md5 1 xxxx //认证方式为md5，1，密码为xxxxospf 1 area 0 authentication-mode md5 1 xxxx //区域下认证 Note：认证分为接口和区域，只要配认证，那么认证方跟非认证方，都要做ospf的认证，而且认证类型要一致。两种认证都存在的情况下，接口认证优先。 多区域概念：也就是除了骨干区域area 0还有非骨干区域，这是就出现了多区域的问题 12345ospf 1 area 0 network x.x.x.x 0.0.0.x area 1 network x.x.x.x 0.0.0.x Note：当一台设备属于多个区域时，要在相应的区域宣告相应的地址 特殊区域Stub区域LSA:只有一类、二类、三类和缺省的三类LSA。不允许自制系统外部的路由（五类LSA），在区域内传播 Stub：ABR设备不向Stub区域传播其接受的四类、五类LSA，Stub区域内的LSA大量减少。为了能够是Stub区域内的设备能够访问不同as的设备，ABR会将外部路由汇聚成一条缺省三类LSA，分发给Stub区域内的每一台设备。 1234ospf 1 area 1 //stub区域不能为骨干区域 stub network x.x.x.x 0.0.0.x Totally StubLSA：一类、二类、三类缺省（把三类的详细变为了缺省） Totally Stub：不允许五类LSA、不允许三类LSA，对其他区域以及AS外的访问，通过本区域的ABR缺省的三类LSA，即默认路由。AS外部或其他区域产生变化，Totally Stub区域内不受影响 123ospf 1 area 1 stub no-summary NSSA区域LSA：一类、二类、三类、七类、缺省七类 NSSA：允许通过本区域ASBR到达少量外部路由，但不允许其他区域的外部路由传播（五类LSA）。到达区域外，只能通过本区域的ASBR。可以引入AS外的路由，用缺省七类LSA传播。在ABR设备上转发的时候，进行了七类LSA装五类LSA的操作，依旧是缺省的 1234ospf 1 area 1 nssa network x.x.x.x 0.0.0.x Totally NSSALSA：一类、二类、三类缺省、七类、七类缺省，既不允许三类LSA，也不允许五类LSA。ABR会自动产生一条缺省三类LSA。 1234ospf 1 area 1 nssa no-summary network x.x.x.x 0.0.0.x 外部路由类型 external type-1 AS外部+AS内部 external type-2 AS外部 e1优于e2 路由聚合目的：为了减少ospf中LSDB的条目，所以在进出的时候才用了路由聚合毕竟你东西太多了，你也看不明白不是，而且的话少了也好看，也好找错误不是，这里有ABR的和ASBR的 123ospf 1 abr-summary x.x.x.x x.x.x.x //ABR汇总，也就是区域间 asbr-summary x.x.x.x x.x.x.x //ASBR汇总，也就是外部路由汇总 LSA种类每半小时更新，一小时失效，当链路状态发生变化时，立即更新。 一类(router-lsa)：OSPF网络里每台设备都会发布 描述设备的链路状态和开销，域内传播 二类(network-lsa)：DR产生，描述本网段的链路信息，在域内传播 三类(network-summmary-lsa)：ABR产生，描述域间信息，用来访问其他区域 四类(ASBR-summary-lsa)：ABR发布，描述ASBR信息，在ASBR和其他相关区域 五类(AS-external-lsa)：ASBR发布，描述ASBR到外部的路由，除Stub和NSSA都宣告 七类(NSSA LSA)：ASBR发布，描述到AS外的路由，仅在NSSA传播，与其他区域通信时，通过ABR进行七类转五类 VLAN间路由概念：做一个vlan的虚拟接口，给他配置相应的IP地址，然后在接口下对其放行 123456789101112131415161718192021interface vlanif 10 ip add x.x.x.x x----access------交换机---interface gig 0/0/0 port link-type access port default vlan 10--路由器--interface gig 0/0/0 ip address y.y.y.y y ----trunk------交换机--interface gig 0/0/0 port link-type trunk port trunk all-pass vlan 10--路由器--interface gig 0/0/0.x //进入路由器的子接口 dot1q termination vid 10 //在子借口打上vlan的标签 arp broadcast enable //开启arp广播 ip address y.y.y.y y Note：做vlanif之间要先创建相应的vlan，这是一个相对的虚拟的一个东西。路由器的子借口下，要先打上标签，再开启arp广播 网络安全AAA介绍：Authentication（认证）、Authorization（授权）和Accounting（计费）的简称，提供了认证、授权和计费的功能。 Authentication：那些用户可以进行访问，分为：不认证、本地认证和远端认证 Note：不认证和本地认证都是在本机的配置，远端认证如其名字所见，就是到其他的地方做一个认证，那个服务器叫做RADIUS、HWTACACS记住就好啦，这不重要 不认证：不做任何的认证，完全信任 本地认证：本地用户信息（username、password），处理快、成本低，受限制。一般是用在telent、ftp中 远端认证：用户信息（username、password）在认证服务器上，NAS作为客户端，这个作为服务器 Authorization：用户被授予的权限、 不授权：不做任何处理 本地授权：NAS上对应域进行配置 远端授权：支持由RADIUS服务器授权或HWTACACS服务器授权 HWTACACS授权，使用HWTACACS服务器对所有用户授权 RADIUS授权，只支持对通过RADIUS服务器认证的用户授权。RADIUS协议的认证和授权是绑定在一起的，不能单独使用RADIUS进行授权。 Note：远端和本地同时存在的时候，远端优于本地。RADIUS可以认为是一个模块化的东西，认证和授权在一起使用，HWTACACS就可对所有人做一个授权，从某种意义上来讲，可以看做HWTACACS的权限比RADIUS大 Accouting：记录使用情况，不计费和远端计费 不计费：就是啥也不做，大冤种，免费提供 远端计费：通过远端的服务器进行计费 Note：RADIUS常用，因为其权利小嘛，也就所谓的安全性高一些，所以我们认为这个更加个安全，便捷。换句话说，这个将东西分的细，便于管理。 123456789101112system-viewaaa //进入aaa视图 authentication-scheme XXX //认证方案名字为xxx authentication-mode &#123;hwtacacs|local|radius&#125; //配置认证类型 domain XXX //创建域XXX authentication-scheme xxx //绑定认证方案为xxx local-user XXX@XXX password cipher XXX //用户XXX的密码为XXX，且属于XXX local-user user-name service-type &#123;&#123;terminal|telnet|ftp|ssh|snmp|http&#125;|ppp|none&#125; //本地用户的接入类型 local-user user-name privilege level level //指定本地用户的权限级别user-interface vty 0 4 //进入视图下 authentication-mode aaa //认证方式改为aaa认证 Note：在配置用户的时候，缺省的情况下，域为default，管理用户的缺省域为default-admin，@后面是加的域名，也可不做配置 ACL概述对于各种流量来说，需要提高其网络安全性、业务带宽，实现流量的分流。是一种流量的过滤器 应用 匹配IP流量 在Traffic-filter中被调用 在NAT中调用 在理由策略中调用 在防火墙策略部署中被调用 Qos中调用 等 组成acl编号、规则、规则编号、动作、匹配项 匹配机制顺序匹配、深度优先 Note：在华为设备中，基本acl中没有默认拒绝，高级ACL中有默认拒绝 基本acl编号2000-2999 匹配项针对IP报文的源IP地址进行匹配 12345acl [number] acl-number [match-order config] //创建acl，并进入acl视图acl name acl-name &#123;basic|acl-number&#125; [match-order config] //创建一个以名称命名的aclrule [rule-id] &#123;deny|permit&#125; [source&#123;source-address source-wildcard|any&#125;|time-range time-name] //配置基本ACL规则interface gig 0/0/1 traffic-filter inbound/outbound acl number //在借口上绑定acl Note acl-number 是其编号 match-order config 指定匹配顺序，缺省情况下是顺序匹配 basic 指是基本的acl advance：指定ACL的类型为高级ACL rule-id：指定ACL的规则ID deny：指定拒绝符合条件的报文 permit：指定允许符合条件的报文 source {source-address source-wildcard|any}：指定ACL规则匹配报文的源地址信息。如果不配置，表示报文的任何源地址都匹配。其中：source-address：指定报文的源地址。source-wildcard：指定源地址通配符。any：表示报文的任意源地址。相当于source-address为0.0.0.0或者source-wildcard为255.255.255.255 time-range time-name：指定ACL规则生效的时间段，缺省是所有时间段都生效，time-name是名字 高级acl编号3000-3999 匹配项IP报文中的源IP地址、目的IP地址、协议类型，TCP或UDP的源目端口号等元素进行匹配 123rule [rule-id] &#123;deny|permit&#125; ip [destination&#123;destination-addressdestination-wildcard|any&#125;|source&#123;source-addresssource-wildcard|any&#125;|time-rangetime-name|[dscpdscp|[tostos|precedenceprecedence]]]rule [rule-id] &#123;deny|permit&#125; &#123;protocol-number|tcp&#125; [destination&#123;destination-address destination-wildcard|any&#125;|destination-port&#123;eq port|gt port|lt port|range port-start port-end &#125; | source &#123; source-address source-wildcard | any &#125; | source-port &#123; eq port | gt port | lt port | range port-start port-end &#125; | tcp-flag &#123; ack | fin | syn &#125; * | time-range time-name ] * Note IP 指定了协议为IP协议 dscp dscp 指定ACL规则匹配报文时，区分服务代码点（Differentiated Services Code Point），取值为：0~63 tos tos 指定ACL规则匹配报文时，依据服务类型字段进行过滤，取值为：0~15 precedence precedence：指定ACL规则匹配报文时，依据优先级字段进行过滤。precedence表示优先级字段值，取值为：0~7 eq port：指定等于目的端口；gt port：指定大于目的端口；lt port：指定小于目的端口；range port-start port-end：指定源端口的范围。 IPSec VPN概述在双方的Ip通过加密、完整性校验、数据源认证等方式，保证了IP数据报文在网络上的传输的机密性、完整性和防重放也就说IPSec是一个加密的传输，具有五个性质 结构由AH、ESP、IKE协议构成 AH：数据源认证、数据完整性和防报文重放功能 ESP：AH+IP报文加密（没有IP头） IKE：自动协商AH和ESP所使用的密码算法 安全联盟SA：定义了IPSec通信所使用的数据封装模式、认证、加密算法和密钥等参数 SA是单向的，通信的话要有两个SA，每一种安全协议都要有一对SA 步骤 可以通信 使用acl定义、区分不同的数据流 配置安全提议（安全协议、认证算法、加密算法和封装模式），两边的认证算法都要一致 配置IPSec安全策略 接口上应用IPSec安全策略 1234567891011121314ipsec proposal tran1 //IPSec的名字是tran1transform [ah|ah-esp|esp] //更改认证模式encapsulation-mode &#123;transport|tunnel&#125; //隧道的传输模式esp|ah authentication-algorithm [md5|sha1|sha2-256|sha2-384|sha2-512] //esp|ah的认证方式esp encryption-algorithm [des|3des|aes-128|aes-192|aes-256] //esp的加密算法ipsec policy p1 10 manualsecurity acl 3000 //用来指定IPSec策略所引用的访问控制列表proposal tran1 //指定策略使用的提议tunnel remote y.y.y.y //配置安全隧道的对端地址tunnel local x.x.x.x //安全隧道的本端地址sa spi outbound esp 54321 //安全联盟的spi参数配置,出入端口参数一致sa spi inbound esp 12345sa string-key outbound esp simple huawei //安全联盟的认证密钥sa string-key inbound esp simple huawei GRE概述 作用于两个端点之间提供安全的IP通信，IPSec VPN只能加密并传输单播数据，GRE可以加密广播数据，是一种隧道封装技术 可以解决异种网络传输的问题 IPSec VPN是创建一条跨越共享公网的隧道，实现私网互联，且只能安全传输IP报文，无法传输ospf、rip等路由 GRE可以讲原来的协议封装在另一种协议报文中进行传输 可以把rip这种距离矢量路由协议封装，做到隐藏他们之间的跳数 GRE本身不支持加密，常用IPSec进行加密，先简历GRE隧道，然后再启用IPSec VPN对保温进行加密，保证完整性和私密性 Keepalive可以仅在一端配置，一端配置另一端不管配不配置都会生效，如果对端不可达，即可断掉，避免数据空洞，建立后会周期性发送Keepalive报文 12345678interface tunnel interface-number //创建Tunnel接口 ip address x.x.x.x x port link-type access tunnel-protocol gre //配置隧道接口的协议为gre source &#123;source-ip-address|interface-type interface-number&#125; //配置源地址或源接口 destination dest-ip-address //配置目的地址 keepalive [period period[retry-times retry-times] //开启Keepalive检测功能 gre key 密码 //配置key认证 Note 在配置静态路由时候，出接口是turnnel接口 period参数指定Keepalive检测报文的发送周期，默认值为5秒 retry-times参数指定Keepalive检测报文的重传次数，默认值为3 指定的重传次数内未收到对端的回应报文，则认为隧道两端通信失败，GRE隧道将被拆除 WLAN","categories":[],"tags":[{"name":"路由交换","slug":"路由交换","permalink":"http://piaopiao.love/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2/"}]},{"title":"信息搜集--ctfshow","slug":"文件上传--ctfshow","date":"2022-04-12T11:56:48.000Z","updated":"2022-11-03T07:25:08.791Z","comments":true,"path":"2022/04/12/文件上传--ctfshow/","link":"","permalink":"http://piaopiao.love/2022/04/12/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0--ctfshow/","excerpt":"","text":"文件上传—ctfshow写在前面一句话木马 1&lt;?php eval($_POST[&#x27;a&#x27;]); ?&gt; 151——–后端无验证 直接上穿无法进行，显示不支持格式，而且在bp中没有抓到相应的流量，我们猜测这是在客户端的一个js的一个检测，这时候我们有两种绕过方法 在前端中禁用js、或者直接在js代码中添加.php的允许条目，异或将js前端校验的代码直接删除 使用bp进行抓包处理，上传一个它允许的格式，在bp中，我们将文件后缀改回.php结尾的文件 在上传成功后，我们使用hackbar或者蚁剑对其进行连接 POST传参：aaa=system(&quot;tac ../falg.php&quot;)，aaa是一句话木马的连接密码，system()是一个函数，意思是括号内的东西呢当做linux的命令执行 使用bp进行修改，在名字中修改，改变为.php文件，然后使用蚁剑进行连接 152——-后端文件类型检测依旧，我们对其进行1jh.php文件的上传，显示文件不支持，跟151一样存在前端认证，进行更改后发现上传依旧失败，我们长传的时候使用bp抓包，对文件进行修改 后缀名的时候，我们可以使用没有禁用的进行绕过，大小写、php1、php3等 文件类型的时候，我们进行修改为图片格式imange/jpeg image/png image/gif 文件内容的话，我们使用头部进行修改FFD8FF 89504E47 GIF98a JPEG (jpg)，文件头：FFD8FF PNG (png)，文件头：89504E47 GIF (gif)，文件头：47494638 HTML (html)，文件头：68746D6C3E ZIP Archive (zip)，文件头：504B0304 RAR Archive (rar)，文件头：52617221 Adobe Acrobat (pdf)，文件头：255044462D312E MS Word&#x2F;Excel (xls.or.doc)，文件头：D0CF11E0 153——-配置文件可控经过一系列尝试 具有前端认证，也就是js认证，然后我们使用修改一句话木马的后缀，或者直接在前端代码把他删除 我们进行尝试，发现各种方法都不可以，我们尝试修改后缀的大小写，也是失败的，最后发现upload这个文件下有index.php这个文件，可以上传user.ini文件auto_append_file=1jh.png， 意思是在所有的php文件后插入1jh.png这个文件，然后我们在将我们的图片马上传，因为他把.php的后缀给写死了，无法进行绕过。 所以也就是说，我们的每一个php文件都包含有我们上传的图片马中所包含的信息 Note：最好的情况下我们将所有要上传的文件都改为，.png后缀的文件，使用bp抓包的时候再进行修改 154——文件魔术字节欺骗我们先把上面的重复一下，发现发送不过去，我们使用bp 先上传一个.user.ini文件，里面写上auto_append_file=1jh.txt，发现上传成功 我们上传一句话木马，这个时候，我们在书写，一句话木马发现上传不成功，我们修改文件的类型，发现不可以，我们再修改文件头，去改hex二进制文件，头部的修改方式，GIF89a，或者1PNG然后我们把1改成89，这样子就可以过去了。然后发现，对于文件中包含php的全部拒绝上传，这时候我们使用短便签&lt;?=eval($_POST[&#39;1&#39;]):?&gt;，上传成功，使用post直接进行查看flag 155——-配置文件可控使用上题方法可以直接绕过 156——-文件内容检测[][]可以使用{}绕过 157——-php脚本的最后一个分号可以省略array_pop()：array_pop() 函数删除数组中的最后一个元素。 {}被禁用 1c // php中结尾的时候；可以是不写的 158——日志包含这里可能过略了ls命令，我们使用post传参，查看flag 159——突破日志包含检测 使用include()包含函数 ，绕过括号 对log进行了过滤，我们使用分号，将其分开即可’.’分开 1&lt;?php inclued&#x27;/var/lo&#x27;.&#x27;g/nginx/access.lo&#x27;.&#x27;g&#x27; ?&gt; 小括号的绕过，使用&#96;&#96;反引号， 修改UA头信息，记性绕过，我们改成一句话木马，然后进行连接 这个地方也可以直接穿完.user.ini这个文件之后，我们在上传一个含有&#96;包含的命令，让其直接直接执行 160——日志包含突破空格检测对空格进行绕过，我们使用换行，这时候我们用1去标记一下，我们要添加的换行的位置，然后我们改成0d，换行符的标识，进行绕过 161——增加的文件头认证我们使用1PNG，进入hex修改把1变成89 162—–","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://piaopiao.love/tags/CTF/"}]}],"categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://piaopiao.love/tags/python/"},{"name":"tools","slug":"tools","permalink":"http://piaopiao.love/tags/tools/"},{"name":"CTF","slug":"CTF","permalink":"http://piaopiao.love/tags/CTF/"},{"name":"路由交换","slug":"路由交换","permalink":"http://piaopiao.love/tags/%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2/"}]}